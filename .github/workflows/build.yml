name: Build TvOS IPA

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup CocoaPods
      run: |
        # Navigate to the root directory
        cd Movie4K

        # Install CocoaPods
        gem install cocoapods -v 1.8.3

        # Create a new Podfile with Swift version set
        cat <<EOF > Podfile
        platform :tvos, '9.2'
        use_frameworks!
        
        target 'Movie4K' do
          swift_version = '5.7'
          
          pod 'SwiftyJSON', '2.3.2'
          pod 'Alamofire', '3.4.0'
          pod 'HTMLReader', '0.9.6'
          pod 'Cosmos', '1.2.2'
          pod 'MarqueeLabel/Swift', '2.7.4'
          pod 'SVProgressHUD', :git => 'https://github.com/SVProgressHUD/SVProgressHUD.git'
          pod 'PromiseKit', '3.2.0'
          
          post_install do |installer|
            installer.pods_project.targets.each do |target|
              target.build_configurations.each do |config|
                config.build_settings['SWIFT_VERSION'] = swift_version
              end
            end
          end
        end
        EOF

        # Install dependencies
        pod install

    - name: Clean Build Artifacts
      run: rm -rf ~/Library/Developer/Xcode/DerivedData

    - name: Build TvOS App
      run: |
        cd Movie4K/movie4k.xcodeproj
        set -o pipefail && xcodebuild archive \
        -workspace movie4k.xcworkspace \
        -scheme movie4k \
        -sdk appletvos \
        -configuration Debug \
        -destination 'generic/platform=tvOS' \
        clean build CODE_SIGN_IDENTITY='' CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO ONLY_ACTIVE_ARCH=NO \
        | tee build.log | xcpretty || (echo "Build failed. Check build.log for details." && exit 1)

    - name: Generate Unsigned IPA
      if: success()
      run: |
        cd ~/Library/Developer/Xcode/Archives
        mkdir Payload
        mv */*/Products/Applications/*.app Payload/
        zip -r Movie4K.ipa Payload

    - name: Upload IPA
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: 'Movie4K-IPA'
        path: ~/Library/Developer/Xcode/Archives/Movie4K.ipa

    - name: Upload Build Log on Failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: 'build-log'
        path: build.log
        if-no-files-found: warn
